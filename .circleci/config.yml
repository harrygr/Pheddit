version: 2

workflows:
  version: 2
  linklet_workflow:
    jobs:
      - frontend
      - api

jobs:
  frontend:
    docker:
      - image: node:latest
    working_directory: ~/repo/frontend
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          key: yarn-cache-{{ checksum "yarn.lock" }}
      - run:
          name: install-dependencies
          command: yarn install
      - run:
          name: run-tests
          command: yarn test --coverage
      - run:
          name: build-bundle
          command: yarn build --production
      - persist_to_workspace:
          root: ./
          paths:
            -  coverage/lcov-report
            -  build
      - save_cache:
          key: yarn-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

  api:
    docker:
      - image: elixir:1.5.2
        environment:
          - MIX_ENV=test
          - DB_USER=linklet
          - DB_PASSWORD=secret
          - DB_DATABASE=linklet
      - image: mysql:8
        environment:
          - MYSQL_USER=linklet
          - MYSQL_PASSWORD=secret
          - MYSQL_DATABASE=linklet
          - MYSQL_ROOT_PASSWORD=secret
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install hex deps
          command: |
            mix local.hex --force
            mix local.rebar --force
      - restore_cache:
          keys:
            - mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - mix-cache-{{ .Branch }}
            - mix-cache
      - restore_cache:
          keys:
            - build-cache-{{ .Branch }}
            - build-cache
      - run: mix do deps.get, compile
      - save_cache:
          key: mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:
          key: mix-cache
          paths: "deps"
      - save_cache:
          key: build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache:
          key: build-cache
          paths: "_build"
      - run: mix ecto.create && mix ecto.migrate
      - run: mix test